// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`gen route types 1`] = `
"declare module "safe-routes" {
  type URLSearchParamsInit = string | string[][] | Record<string, string> | URLSearchParams;
  // symbol won't be a key of SearchParams
  type IsSearchParams<T> = symbol extends keyof T ? false : true;

  type ExportedQuery<T> = IsSearchParams<T> extends true ? T : URLSearchParamsInit;

  export interface Routes {
    "/": {
      params: never,
      query: ExportedQuery<import('../app/root').SearchParams>,
    },
    "/:lang?/about": {
      params: {'lang'?: string | number},
      query: ExportedQuery<import('../app/routes/($lang).about').SearchParams>,
    },
    "/:provider-key?/about": {
      params: {'provider-key'?: string | number},
      query: ExportedQuery<import('../app/routes/($provider-key).about').SearchParams>,
    },
    "/admin": {
      params: never,
      query: ExportedQuery<import('../app/routes/admin._index').SearchParams>,
    },
    "/admin/episodes": {
      params: never,
      query: ExportedQuery<import('../app/routes/admin.episodes._index').SearchParams>,
    },
    "/admin/episodes/:id": {
      params: {'id': string | number},
      query: ExportedQuery<import('../app/routes/admin.episodes.$id._index').SearchParams>,
    },
    "/admin/episodes/:id/comments": {
      params: {'id': string | number},
      query: ExportedQuery<import('../app/routes/admin.episodes.$id.comments').SearchParams>,
    },
    "/admin/episodes/new": {
      params: never,
      query: ExportedQuery<import('../app/routes/admin.episodes.new').SearchParams>,
    },
    "/api/:id.json": {
      params: {'id': string | number},
      query: ExportedQuery<import('../app/routes/api.$id[.]json').SearchParams>,
    },
    "/auth": {
      params: never,
      query: ExportedQuery<import('../app/routes/auth._auth').SearchParams>,
    },
    "/auth/:provider-key": {
      params: {'provider-key': string | number},
      query: ExportedQuery<import('../app/routes/auth.$provider-key.').SearchParams>,
    },
    "/auth/login": {
      params: never,
      query: ExportedQuery<import('../app/routes/auth._auth.login').SearchParams>,
    },
    "/blog": {
      params: never,
      query: ExportedQuery<import('../app/routes/blog._index').SearchParams>,
    },
    "/blog/rss.xml": {
      params: never,
      query: ExportedQuery<import('../app/routes/blog.rss[.]xml').SearchParams>,
    },
    "/chats/:season/:episode": {
      params: {'season': string | number; 'episode': string | number},
      query: ExportedQuery<import('../app/routes/chats_.$season.$episode').SearchParams>,
    },
    "/chats/:season/:episode/:slug": {
      params: {'season': string | number; 'episode': string | number; 'slug': string | number},
      query: ExportedQuery<import('../app/routes/chats_.$season.$episode.$slug').SearchParams>,
    },
    "/credits": {
      params: never,
      query: ExportedQuery<import('../app/routes/credits').SearchParams>,
    },
    "/home": {
      params: never,
      query: ExportedQuery<import('../app/routes/(static).home').SearchParams>,
    },
    "/jokes": {
      params: never,
      query: ExportedQuery<import('../app/routes/jokes._index').SearchParams>,
    },
    "/jokes/:jokeId": {
      params: {'jokeId': string | number},
      query: ExportedQuery<import('../app/routes/jokes.$jokeId').SearchParams>,
    },
    "/people/:personId": {
      params: {'personId': string | number},
      query: ExportedQuery<import('../app/routes/people.$personId').SearchParams>,
    },
    "/people/:personId/:planId/remove-plan": {
      params: {'personId': string | number; 'planId': string | number},
      query: ExportedQuery<import('../app/routes/people.$personId.$planId.remove-plan').SearchParams>,
    },
    "/posts": {
      params: never,
      query: ExportedQuery<import('../app/routes/posts._index').SearchParams>,
    },
    "/posts/:id": {
      params: {'id': string | number},
      query: ExportedQuery<import('../app/routes/posts.$id').SearchParams>,
    },
    "/posts/*": {
      params: {'*': string | number},
      query: ExportedQuery<import('../app/routes/posts.$').SearchParams>,
    },
    "/posts/delete": {
      params: never,
      query: ExportedQuery<import('../app/routes/posts.delete').SearchParams>,
    },
    "/s/:query": {
      params: {'query': string | number},
      query: ExportedQuery<import('../app/routes/s.$query').SearchParams>,
    },
    "/sign-in/*": {
      params: {'*': string | number},
      query: ExportedQuery<import('../app/routes/sign-in.$').SearchParams>,
    },
    "/somewhere/cool/*": {
      params: {'*': string | number},
      query: ExportedQuery<import('../app/catchall').SearchParams>,
    },
    "/static/home": {
      params: never,
      query: ExportedQuery<import('../app/routes/(static).home').SearchParams>,
    }
  }

  type RoutesWithParams = Pick<
    Routes,
    {
      [K in keyof Routes]: Routes[K]["params"] extends Record<string, never> ? never : K
    }[keyof Routes]
  >;

  export type RouteId =
            | 'root'
            | 'routes/chats_.$season.$episode'
            | 'routes/chats_.$season.$episode.$slug'
            | 'routes/people.$personId'
            | 'routes/people.$personId.$planId.remove-plan'
            | 'routes/api.$id[.]json'
            | 'routes/blog.rss[.]xml'
            | 'routes/($lang).about'
            | 'routes/(static).home'
            | 'routes/posts._index'
            | 'routes/posts.delete'
            | 'routes/auth._auth'
            | 'routes/auth._auth.login'
            | 'routes/posts.$id'
            | 'routes/sign-in.$'
            | 'routes/s.$query'
            | 'routes/credits'
            | 'routes/posts.$'
            | 'routes/admin'
            | 'routes/admin.episodes._index'
            | 'routes/admin.episodes.$id'
            | 'routes/admin.episodes.$id.comments'
            | 'routes/admin.episodes.$id._index'
            | 'routes/admin.episodes.new'
            | 'routes/admin._index'
            | 'routes/jokes'
            | 'routes/jokes.$jokeId'
            | 'routes/jokes._index'
            | 'routes/blog'
            | 'routes/blog._index'
            | 'routes/auth.$provider-key'
            | 'routes/($provider-key).about'
            | 'catchall';

  export function $path<
    Route extends keyof Routes,
    Rest extends {
      params: Routes[Route]["params"];
      query?: Routes[Route]["query"];
    }
  >(
    ...args: Rest["params"] extends Record<string, never>
      ? [route: Route, query?: Rest["query"]]
      : [route: Route, params: Rest["params"], query?: Rest["query"]]
  ): string;

  export function $routeId(routeId: RouteId): RouteId;
}"
`;
